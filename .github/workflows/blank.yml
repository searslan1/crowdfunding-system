name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22
      
      - name: Install gotestsum
        run: go install gotest.tools/gotestsum@latest
  
      - name: Add Go Bin to PATH
        run: echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
  
  

      - name: Generate go.sum file
        run: go mod tidy

      - name: Create .env file
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_SSLMODE=disable" >> .env
        shell: bash

      - name: Run Tests
        run: docker-compose -f docker-compose.test.yml up --build --abort-on-container-exit --exit-code-from test-runner

      - name: Run Unit Tests with Coverage
        run: gotestsum --format standard-verbose --junitfile report.xml ./...

      - name: Publish Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: report.xml

      - name: Fail if Tests Fail
        run: |
          if grep -q "FAIL" report.xml; then
            echo "Tests failed! Stopping build."
            exit 1
          fi
